{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Greetings! </p> <p>This site is dedicated to sharing my passion for technology through comprehensive documentation and practical tips. </p> <p>Through this site I share my hands-on experience and insights on various tech topics. </p> <p>I hope you find the content presented useful and informative.</p>"},{"location":"#site-info","title":"Site Info","text":"<p>The site was built using MkDocs and published using GitHub pages. For more info on MkDocs please visit this site.</p>"},{"location":"Disaster_Recovery/homelab_dr_plan/","title":"Homelab DR Plan","text":"<p>Warning</p> <p>The following Disaster Recovery plan is specific to my homelab environment. These steps should not be used for your environment however you can extract certain steps from it in order to formulate your own.</p>"},{"location":"Disaster_Recovery/homelab_dr_plan/#networking","title":"Networking","text":"Hardware Description Ubiquiti EdgeRouter X Firewall Netgear S350 GS308T Core Switch TP-Link WA1201 Wireless Access Point"},{"location":"Disaster_Recovery/homelab_dr_plan/#restore-steps","title":"Restore Steps","text":""},{"location":"Disaster_Recovery/homelab_dr_plan/#ubiquiti-edgerouter-x","title":"Ubiquiti EdgeRouter X","text":"<ol> <li>Connect device to eth0</li> <li>Restore config backup</li> <li>Connect device as per table below</li> </ol> Port Device eth0 WAN eth1 N/A eth2 LAN eth3 N/A eth4 N/A"},{"location":"Disaster_Recovery/homelab_dr_plan/#netgear-s350-gs308t","title":"Netgear S350 GS308T","text":"<ol> <li>Connect device to Port 1</li> <li>Restore config backup</li> <li>Connect device as per table below</li> </ol> Port Device 1 Proxmox Host 1 2 Proxmox Host 2 3 N/A 4 N/A 5 TP-Link WA1201 6 Main PC 7 N/A 8 Ubiquiti EdgeRouter X"},{"location":"Disaster_Recovery/homelab_dr_plan/#tp-link-wa1201","title":"TP-Link WA1201","text":"<ol> <li>Connect device to port</li> <li>Restore config backup</li> </ol>"},{"location":"Disaster_Recovery/homelab_dr_plan/#network","title":"Network","text":"<pre><code>graph TD\n linkStyle default interpolate basis\n wan[&lt;center&gt;Fibre 75/75 Mb&lt;br&gt;]---router{&lt;center&gt;Ubiquiti EdgeRouter X&lt;br&gt;}\n router---|1Gb|switch[&lt;center&gt;Netgear S350 GS308T&lt;br&gt;]\n subgraph switching[\" \"]\n switch---|Port 1|esxi-host-01(&lt;center&gt;Proxmox Host 01&lt;br&gt;)\n switch---|Port 2|esxi-host-02(&lt;center&gt;Proxmox Host 02&lt;br&gt;)\n switch---|Port 5|tp-link-wa801n(&lt;center&gt;TP-Link WA1201&lt;br&gt;)\n switch---|Port 6|main-pc(&lt;center&gt;Main PC&lt;br&gt;)\n switch---|Port 8|ubiquiti-edgerouter-x(&lt;center&gt;Ubiquiti EdgeRouter X&lt;br&gt;)\n end\n subgraph wifi[\" \"]\n tp-link-wa1201---vlan-lab(&lt;center&gt;VLAN 10 - Lab&lt;br&gt;)\n tp-link-wa1201---vlan-iot(&lt;center&gt;VLAN 20 - IoT&lt;br&gt;)\n tp-link-wa1201---vlan-guest(&lt;center&gt;VLAN 30 - Guest&lt;br&gt;)\n end</code></pre>"},{"location":"Disaster_Recovery/homelab_dr_plan/#servers","title":"Servers","text":""},{"location":"Disaster_Recovery/homelab_dr_plan/#hardware","title":"Hardware","text":"<p>Currently utilising the following hardware for Proxmox Hosts: </p> Model CPU RAM Storage Proxmox Version Dell Optiplex 7050 Intel Core i5 7500 32 GB 3x 240 GB SSD 8.3.3 HP EliteDesk 800 G1 SFF Intel Core i7 4770 24 GB 3x 240 GB SSD 8.3.3"},{"location":"Disaster_Recovery/homelab_dr_plan/#virtual-machines","title":"Virtual Machines","text":""},{"location":"Disaster_Recovery/homelab_dr_plan/#restore-steps_1","title":"Restore Steps","text":""},{"location":"Disaster_Recovery/homelab_dr_plan/#backups","title":"Backups","text":"<p>Using Veeam Backup &amp; Replication for backup and restore capabilities. The following steps would need to be taken to get Virtual Machines restored</p> <ol> <li>Ensure Proxmox Hosts have been provisioned</li> <li>Install Veeam Backup &amp; Replication 12 or above on a Windows Client or Server OS</li> <li>Connect backup media to temporary restore machine</li> <li>Utilise Encryption key from BitWarden or KeePass databases to decrypt Veeam Configuration Backup</li> <li>Map restore media to jobs once configuration backup has been restored</li> <li>Initiate Full VM restores of all Virtual Machines to relevant Proxmox Host</li> </ol>"},{"location":"containerisation/kubernetes/k3s/","title":"k3s Install","text":"<p>k3s is a \"batteries-included\" distribution of Kubernetes packaged into a single binary. This makes it really lightweight for low power devices such as Raspberry Pi's and also makes it easy for getting familiar with Kubernetes as a whole.</p> <p>For in depth documentation, visit the k3s homepage.</p> <p>k3s can be installed by running a single command on your Linux distro of choice. I generally add some slight modifications to the command in order to prep for creating a cluster.</p>"},{"location":"containerisation/kubernetes/k3s/#initialise-cluster","title":"Initialise cluster","text":"<p>On the first/master node run the following and replace <code>&lt;example token&gt;</code> with a token of your choosing</p> <p><pre><code>curl -sfL https://get.k3s.io | K3S_TOKEN=&lt;example token&gt; sh -s - server --cluster-init\n</code></pre> The above will fetch the install binary and bootstrap a cluster using the provided token</p>"},{"location":"containerisation/kubernetes/k3s/#add-additional-nodes","title":"Add additional nodes","text":"<p>For any additional nodes you want to add to the cluster you can run the following replacing <code>&lt;example token&gt;</code> with the one specified in the bootstrap command and the <code>&lt;master node fqdn/ip&gt;</code> with the master node fqdn/ip:</p> <pre><code>curl -sfL https://get.k3s.io | K3S_TOKEN=&lt;example token&gt; sh -s - server --server https://&lt;master node fqdn/ip&gt;:6443\n</code></pre>"},{"location":"containerisation/kubernetes/k3s/#verify-node-status","title":"Verify node status","text":"<p>This should successfully join the node to the cluster which you can confirm by running the following on one of the nodes:</p> <pre><code>kubectl get nodes\n</code></pre>"},{"location":"containerisation/kubernetes/k3s/#copy-kubeconfig-file","title":"Copy kubeconfig file","text":"<p>While you are logged into one of the nodes it would be a good idea to export the kubeconfig file so that you can connect using your local machine. You can get the kubeconfig file details by running the following on one of the nodes:</p> <pre><code>cat /etc/rancher/k3s/k3s.yaml\n</code></pre> <p>Copy this output into a new kubeconfig file in your user profile path.</p> Windows<pre><code>C:\\Users\\username\\.kube\\config\n</code></pre> Linux<pre><code>$HOME/.kube/config\n</code></pre> <p>You should now be able to connect to the cluster from your local machine</p>"},{"location":"containerisation/kubernetes/sops_age/","title":"Kubernetes secrets with Mozilla SOPS and Age encryption","text":"<p>There are various ways to manage secrets within a Kubernetes cluster but one of the easiest and most effective ways I manage secrets on my clusters is by using Mozilla SOPS along with age encryption.</p> <p>I use Flux for GitOps on my clusters and so the cluster state is controlled by a GitHub repository. This repository is public facing and I wanted to include my secrets within the repository as well.</p>"},{"location":"containerisation/kubernetes/sops_age/#sops","title":"SOPS","text":"<p>First, download the SOPS binary from the repository</p> <p>Next, move the binary into a location of choice and update your OS environment variables with the path</p>"},{"location":"containerisation/kubernetes/sops_age/#test-cli","title":"Test CLI","text":"<p>Run <code>sops -v</code> to confirm it returns an output</p>"},{"location":"containerisation/kubernetes/sops_age/#age","title":"Age","text":"<p>First, download the Age binary from the repository</p> <p>Next, move the binary into a location of choice and update your OS environment variables with the path</p>"},{"location":"containerisation/kubernetes/sops_age/#test-cli_1","title":"Test CLI","text":"<p>Run <code>age -version</code> to confirm it returns an output</p>"},{"location":"containerisation/kubernetes/sops_age/#generate-age-key-pair","title":"Generate Age key pair","text":"<pre><code>age-keygen -o sops-age.key\n</code></pre>"},{"location":"containerisation/kubernetes/sops_age/#add-age-config-file-to-repository","title":"Add age config file to repository","text":"<p>To make encryption of secrets easier when working within the context of your GitOps repository you can create configuration files for automatic encryption. With this you can apply rules to look for particular data types as well as automatically use the correct age public key. </p> <p>Normally you will use this for just secret data but I extend this to my ingress configuration as well to hide domain names and email addresses.</p>"},{"location":"containerisation/kubernetes/sops_age/#create-sopsyaml-file","title":"Create .sops.yaml file","text":"encrypt data and stringData types<pre><code>creation_rules: \n  - path_regex: .*.yaml \n  -  encrypted_regex: '^(data|stringData)$' \n  - age: &lt;age public key&gt; \n</code></pre> encrypt email and dnsNames types<pre><code>creation_rules: \n  - path_regex: .*.yaml \n  - encrypted_regex: '(email|dnsNames)' \n  - age: &lt;age public key&gt; \n</code></pre>"},{"location":"containerisation/kubernetes/sops_age/#_1","title":"Kubernetes secrets with Mozilla SOPS and Age encryption","text":""},{"location":"containerisation/kubernetes/sops_age/#install-age-key-as-secret","title":"Install Age key as secret","text":"<p>You will now need to install the Age generated key </p>"},{"location":"containerisation/kubernetes/sops_age/#working-with-secrets","title":"Working with Secrets","text":"<p>You are now ready to start encrypting secrets with </p>"},{"location":"linux/ad_domain_join/","title":"Active Directory Domain Join","text":"<p>This guide assumes you have an existing Active Directory domain. This guide also assumes Debian based distributions.</p>"},{"location":"linux/ad_domain_join/#install-required-packages","title":"Install required packages","text":"<pre><code>sudo apt install sssd-ad sssd-tools realmd adcli\n</code></pre>"},{"location":"linux/ad_domain_join/#confirm-domain-discovery-via-dns","title":"Confirm domain discovery via DNS","text":"<pre><code>sudo realm -v discover ad1.example.com\n</code></pre> <p>You should see a result similar to the following if successful</p> <pre><code> * Resolving: _ldap._tcp.ad1.example.com\n * Performing LDAP DSE lookup on: 10.51.0.5\n * Successfully discovered: ad1.example.com\nad1.example.com\n  type: kerberos\n  realm-name: AD1.EXAMPLE.COM\n  domain-name: ad1.example.com\n  configured: no\n  server-software: active-directory\n  client-software: sssd\n  required-package: sssd-tools\n  required-package: sssd\n  required-package: libnss-sss\n  required-package: libpam-sss\n  required-package: adcli\n  required-package: samba-common-bin\n</code></pre>"},{"location":"linux/ad_domain_join/#join-device-to-domain","title":"Join device to domain","text":"<p>Note</p> <p>This <code>adcli</code> command is being used for domain join. This is to combat issues with Server 2025 Domain Controllers as per: https://gitlab.freedesktop.org/realmd/adcli/-/issues/40</p> <pre><code>adcli join -U yout_user@YOUR.REALM --domain-controller=your.dc.fqdn --verbose --ldap-passwd\n</code></pre>"},{"location":"linux/ad_domain_join/#configure-sssd","title":"Configure SSSD","text":"<p>If the domain join operation was successful create a default SSSD configuration file at <code>/etc/sssd/sssd.conf</code> and make sure to <code>chmod 600</code> on the file once configured.</p> <pre><code>[sssd]\ndomains = ad1.example.com\nconfig_file_version = 2\nservices = nss, pam\n\n[domain/ad1.example.com]\ndefault_shell = /bin/bash\nkrb5_store_password_if_offline = True\ncache_credentials = True\nkrb5_realm = AD1.EXAMPLE.COM\nrealmd_tags = manages-system joined-with-adcli \nid_provider = ad\nfallback_homedir = /home/%u@%d\nad_domain = ad1.example.com\nuse_fully_qualified_names = True\nldap_id_mapping = True\naccess_provider = ad\n</code></pre> <p>Restart the SSSD service for configuration settings to be applied.</p> <pre><code>sudo systemctl restart sssd\n</code></pre>"},{"location":"linux/ad_domain_join/#allow-user-home-directory-creation","title":"Allow user home directory creation","text":"<p>This will allow any AD users to automatically create a new home directory upon logon.</p> <pre><code>sudo pam-auth-update --enable mkhomedir\n</code></pre>"},{"location":"linux/ad_domain_join/#testing-setup","title":"Testing setup","text":""},{"location":"linux/ad_domain_join/#fetch-ad-user-information","title":"Fetch AD User information","text":"<pre><code>$ getent passwd john@ad1.example.com\njohn@ad1.example.com:*:1725801106:1725800513:John Smith:/home/john@ad1.example.com:/bin/bash\n</code></pre>"},{"location":"linux/ad_domain_join/#fetch-ad-group-membership-information","title":"Fetch AD Group membership information","text":"<pre><code>$ groups john@ad1.example.com\njohn@ad1.example.com : domain users@ad1.example.com engineering@ad1.example.com\n</code></pre>"},{"location":"linux/add_new_disk/","title":"Add disk to Virtual Machine","text":"<p>Firstly add the new disk via your virtualisation platform and reboot the VM. </p> <p>Login to the VM and run <code>fdisk -l</code> and note down the new disk name (normally <code>/dev/sdb</code> if the VM only has one disk to begin with)</p> <p>Run <code>cfdisk /dev/sdb</code> to create a new partition on the disk</p>"},{"location":"linux/add_new_disk/#create-ext4-partition","title":"Create ext4 partition","text":"<p>Run the <code>mkfs.ext4</code> command against the new disk while specifying the partition number </p> <pre><code>mkfs.ext4 /dev/sdb1\n</code></pre>"},{"location":"linux/add_new_disk/#create-mountpoint","title":"Create mountpoint","text":"<p>Create a new mountpoint directory for the partition in the <code>/mnt</code> directory</p> <pre><code>mkdir /mnt/new-volume\n</code></pre>"},{"location":"linux/add_new_disk/#mount-volume-on-mountpoint","title":"Mount volume on mountpoint","text":"<pre><code>mount /dev/sdb1 /mnt/new-volume\n</code></pre> <p>You can now browse your new volume at the created mountpoint </p>"},{"location":"linux/add_new_disk/#make-mountpoint-persistent","title":"Make mountpoint persistent","text":"<p>To make the new mountpoint persist across reboots, modify the <code>/etc/fstab</code> file and add the following entry to the file</p> <pre><code>/dev/sdb1 /mnt/new-volume ext4 defaults 0 0\n</code></pre>"},{"location":"linux/clear_journal/","title":"Clear Journal","text":"<p>Sometimes you need to clear the journal to clear disk space on a host. Below are some examples of commands to clear the journal.</p>"},{"location":"linux/clear_journal/#examples","title":"Examples","text":"<p>Retain the last 100MB of data</p> <pre><code>sudo journalctl --vacuum-size=100M\n</code></pre> <p>Retain the last 10 days of data</p> <pre><code>sudo journalctl --vacuum-time=10d\n</code></pre>"},{"location":"linux/clear_journal/#parameter-explanation","title":"Parameter Explanation","text":"<p>The following can be found while running <code>man journalctl</code></p> <pre><code>--vacuum-size=, --vacuum-time=, --vacuum-files=\n\nRemoves the oldest archived journal files until the disk space they use \nfalls below the specified size (specified with the usual \"K\", \"M\", \"G\" and \n\"T\" suffixes), or all archived journal files contain no data older than \nthe specified timespan (specified with the usual \"s\", \"m\", \"h\", \"days\", \n\"months\", \"weeks\" and \"years\" suffixes), or no more than the specified \nnumber of separate journal files remain. Note that running --vacuum-size= \nhas only an indirect effect on the output shown by --disk-usage, as the \nlatter includes active journal files, while the vacuuming operation only \noperates on archived journal files. Similarly, --vacuum-files= might not \nactually reduce the number of journal files to below the specified number, \nas it will not remove active journal files.\n</code></pre> <pre><code>--vacuum-size=, --vacuum-time= and --vacuum-files=\n\nmay be combined in a \nsingle invocation to enforce any combination of a size, a time and a \nnumber of files limit on the archived journal files. Specifying any of \nthese three parameters as zero is equivalent to not enforcing the specific \nlimit, and is thus redundant.\n</code></pre>"},{"location":"linux/hyper_v_guest_tools_install/","title":"Hyper-V Guest Tools install","text":"<p>In order for Linux Guest VM's to correctly integrate with Hyper-V the Guest tools should be installed. Generally this is installed by default if the VM was originally proviosioned on Hyper-V.</p> <p>If the VM was migrated over from another virtualization platform (eg: ESXI, Xen, QEMU etc) or a Physical Machine then the integration tools would need to be installed.</p> <p>In order to install the Guest tools, login to the Linux VM and run the following code applicable to the Linux distribution:</p> Ubuntu<pre><code>sudo apt-get update\nsudo apt-get install linux-image-virtual linux-tools-virtual linux-cloud-tools-virtual\n</code></pre> Debian<pre><code>sudo apt-get install hyperv-daemons\n</code></pre> <p>For Centos, there are a few extra packages that can be installed for optimisation between the guest and host. These include the VSS daemon and File copy daemon. This can be installed by running the following code:</p> CentOS<pre><code>yum install hyperv-daemons\nyum list installed | grep hyperv\n</code></pre> <p>You will then need to start the appropritate services:</p> <pre><code>systemctl enable hypervkvpd hypervvssd\nsystemctl start hypervkvpd hypervvssd\n</code></pre>"},{"location":"linux/lvm_disk_expand/","title":"LVM Disk Expansion","text":"<p>Expand the required disk within your virtualisation platform </p>"},{"location":"linux/lvm_disk_expand/#run-disk-rescan","title":"Run disk rescan","text":"<p>Warning</p> <p>Replace <code>sda</code> with the physical identifier of the disk</p> <p><pre><code>echo 1&gt;/sys/class/block/sda/device/rescan\n</code></pre> Run <code>fdisk -l</code> to confirm the partition is at the required size, if not reboot the host</p>"},{"location":"linux/lvm_disk_expand/#expand-disk","title":"Expand disk","text":"<p>Expand the disk within <code>cfdisk</code></p>"},{"location":"linux/lvm_disk_expand/#expand-the-lvm-volume","title":"Expand the LVM volume","text":"<p>Warning</p> <p>Replace <code>sda1</code> with the physical identifier of the partition</p> <pre><code>sudo pvresize /dev/sda1\n</code></pre> <pre><code>lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv\n</code></pre> <pre><code>resize2fs -p /dev/ubuntu-vg/ubuntu-lv\n</code></pre> <p>Confirm the partition has been successfully resized using <code>df -h</code></p>"},{"location":"linux/pam_mount/","title":"pam_mount for network shares","text":"<p>If you have network shares in your environment that you want to automount on login without reconfiguring fstab entries then pam_mount is a good candidate. This is especially useful if you have a centralised LDAP server which you use for authentication. </p> <p>This tutorial assumes that you want to mount CIFS shares and are using a Debian based distribution</p>"},{"location":"linux/pam_mount/#backup-existing-pam-configuration","title":"Backup existing pam configuration","text":"<pre><code>sudo cp /etc/pam.d/common-auth /etc/pam.d/common-auth.bak\nsudo cp /etc/pam.d/common-session /etc/pam.d/common-session.bak\n</code></pre>"},{"location":"linux/pam_mount/#install-required-libraries","title":"Install required libraries","text":"<pre><code>sudo apt install -y libpam-mount cifs-utils\n</code></pre>"},{"location":"linux/pam_mount/#enable-user-pam_mount-configuration","title":"Enable user pam_mount configuration","text":"<p>Now we will want to configure a user specific pam_mount config. In order to do this we need to make some changes to the global <code>pam_mount.conf.xml</code> file located in <code>/etc/security</code></p> <p>Open the <code>pam_mount.conf.xml</code> in your chosen text editor and locate the following lines of text</p> <pre><code>&lt;!--\n&lt;luserconf name=\".pam_mount.conf.xml\" /&gt;\n--&gt;\n</code></pre> <p>We will want to uncomment this by removing the leading and trailing comment lines and save the changes</p> <pre><code>&lt;luserconf name=\".pam_mount.conf.xml\" /&gt;\n</code></pre>"},{"location":"linux/pam_mount/#create-user-pam_mount-configuration-file","title":"Create user pam_mount configuration file","text":"<p>You can now make a user pam mount configuration file within your home directory. The file name has to be <code>.pam_mount.conf.xml</code></p> <p>Create the new configuration file with the following parameters (replacing the User, Mount Point, Path and Server configuration as required) and save the changes</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n\n&lt;pam_mount&gt;\n&lt;volume options=\"nodev,nosuid\" user=\"example-user\" mountpoint=\"~/shares/share1\" path=\"share1\" server=\"dc.example.com\" fstype=\"cifs\" /&gt;\n&lt;/pam_mount&gt;\n</code></pre>"},{"location":"linux/pam_mount/#test-mount-points","title":"Test mount points","text":"<p>You can now logoff and login again and the mountpoints should be present within the specified mountpoint locations</p>"},{"location":"linux/postfix_install/","title":"Postfix Install","text":"<p>The below steps will setup Postfix with Gmail SMTP to send emails. Gmail can be swapped out for your email provider of choice. In this tutorial we are using Ubuntu for the setup.</p> <p>Firstly, update the system packages</p>"},{"location":"linux/postfix_install/#update-packages","title":"Update packages","text":"<pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade \n</code></pre>"},{"location":"linux/postfix_install/#install-postfix-package","title":"Install Postfix package","text":"<pre><code>sudo apt-get install postfix \n</code></pre> <p>Select the <code>Internet Site</code> option </p>"},{"location":"linux/postfix_install/#generate-gmail-app-password","title":"Generate Gmail App Password","text":"<p>Follow the guide located here to setup an App Password for your Gmail account</p>"},{"location":"linux/postfix_install/#setup-sasl","title":"Setup SASL","text":"<p>Create a SASL Auth file for Postfix </p> <p><pre><code>vi /etc/postfix/sasl/sasl_credentials   \n</code></pre> Add the Gmail app password to the file </p> <pre><code>[smtp.gmail.com]:587 exampleuser@gmail.com:aodrkojoafdnyqyl \n</code></pre>"},{"location":"linux/postfix_install/#create-hash-database-file","title":"Create Hash Database file","text":"<p>Run the following to create the file </p> <pre><code>sudo postmap /etc/postfix/sasl/sasl_credentials\n</code></pre> <p>This will create a new file <code>/etc/postfix/sasl/sasl_credentials.db</code></p>"},{"location":"linux/postfix_install/#change-permissions-on-database-file","title":"Change permissions on database file","text":"<p>In order to protect the credentials of the file run the following</p> <pre><code>sudo chown root:root /etc/postfix/sasl/sasl_credentials /etc/postfix/sasl/sasl_credentials.db \nsudo chmod 0600 /etc/postfix/sasl/sasl_credentials /etc/postfix/sasl/sasl_credentials.db \n</code></pre>"},{"location":"linux/postfix_install/#set-postfix-relay-sasl-config","title":"Set postfix relay &amp; SASL config","text":"<p>Modify the relay config in the <code>/etc/postfix/main.cf</code></p> <pre><code>mydestination = $myhostname, localhost, localhost.localdomain \nrelayhost = [smtp.gmail.com]:587 \nmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 \n</code></pre> <p>Add the following to the bottom of <code>/etc/postfix/main.cf</code></p> <pre><code>smtp_sasl_auth_enable = yes \nsmtp_sasl_security_options = noanonymous \nsmtp_sasl_password_maps = hash:/etc/postfix/sasl/sasl_credentials\nsmtp_tls_security_level = encrypt \nsmtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt \n</code></pre>"},{"location":"linux/postfix_install/#restart-postfix","title":"Restart postfix","text":"<p><code>sudo systemctl restart postfix</code></p>"},{"location":"linux/postfix_install/#test-email","title":"Test email","text":"<p>To test the postfix config using <code>sendmail</code> do the following</p> <pre><code>sendmail you@youremailaddress.com \nTo: you@youremailaddress.com\nSubject: Test Postfix Email\nThis is a test mail to test Postfix\n</code></pre>"},{"location":"linux/snmp_config/","title":"SNMP Setup on Ubuntu","text":"<p>This guide will showcase installing SNMP on an Ubuntu system.</p>"},{"location":"linux/snmp_config/#update-system-packages","title":"Update system packages","text":"<p><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code> </p>"},{"location":"linux/snmp_config/#install-snmp-package","title":"Install SNMP package","text":"<p><code>sudo apt-get install snmpd</code></p>"},{"location":"linux/snmp_config/#configure-agent-listener","title":"Configure agent listener","text":"<p>Open <code>/etc/snmp/snmpd.conf</code> in the editor of your choice and edit the <code>agentAddress</code> section. Also remove the <code>#</code> in front for it to take effect</p> Listen on all addresses<pre><code>agentAddress udp:161,udp6:[::1]:161\n</code></pre> Listen on specific address<pre><code>agentAddress udp:192.168.100.2:161\n</code></pre>"},{"location":"linux/snmp_config/#configure-community-string","title":"Configure community string","text":"<p>Open <code>/etc/snmp/snmpd.conf</code> in the editor of your choice and edit the <code>rocommunity</code> section.</p> <p>set <code>public</code> to an alternative community name if needed</p>"},{"location":"linux/snmp_config/#restart-snmp-service","title":"Restart SNMP Service","text":"<pre><code>sudo service snmpd restart\n</code></pre>"},{"location":"linux/ubuntu_distro_upgrade/","title":"Ubuntu Distribution Upgrade","text":"<p>Upgrading Ubuntu from one LTS version to the next is a fairly simple process in principal. </p> <p>Warning</p> <p>Please make sure to test this on a non-critical system or take backups prior to upgrading your system!</p>"},{"location":"linux/ubuntu_distro_upgrade/#update-system-packages","title":"Update system packages","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade\u202f\n</code></pre>"},{"location":"linux/ubuntu_distro_upgrade/#install-ubuntu-update-tool","title":"Install Ubuntu update tool","text":"<pre><code>sudo apt install update-manager-core\n</code></pre>"},{"location":"linux/ubuntu_distro_upgrade/#run-system-upgrade","title":"Run system upgrade","text":"<pre><code>sudo do-release-upgrade\n</code></pre>"},{"location":"linux/ubuntu_distro_upgrade/#reboot-system","title":"Reboot system","text":"<pre><code>sudo reboot \n</code></pre> <p>You can now verify the upgrades and rollback if any issues are encountered.</p>"},{"location":"networking/edgerouter/general/","title":"General","text":"<p>Show the entire EdgeRouter config as commands (useful if configuring with something like Ansible)</p> <pre><code>show configuration commands\n</code></pre> <p>Configure static hostname mapping on device</p> <pre><code>set system static-host-mapping host-name &lt;hostname&gt; inet &lt;ip address&gt;\n</code></pre>"},{"location":"networking/phpIPAM/api_interaction/","title":"Api interaction","text":""},{"location":"networking/phpIPAM/api_interaction/#api-interaction","title":"API Interaction","text":"<p>phpIPAM provides a useful API for interacting with phpIPAM. This is very useful if you need to find free IP's in a subnet or perhaps write info to an entry as part of some automation.</p> <p>It is advisable to first create a user within phpIPAM for use with the API. The authentication method uses an authorization HTTP header which you can then use in subsequent API calls.</p>"},{"location":"networking/phpIPAM/api_interaction/#return-token","title":"Return token","text":"<pre><code>curl -k https://ipam.example.com/api/myphpipamappid/user/ -X POST -u &lt;username&gt;:&lt;password&gt;  \n</code></pre>"},{"location":"networking/phpIPAM/api_interaction/#fetch-token","title":"Fetch token","text":"<pre><code>curl -k https://ipam.example.com/api/myphpipamappid/sections/ --header \"Content-Type: application/json\" \"token: .J1e9ipFZkPE6EvIRAqEf9hp\" -X GET\u00a0\n</code></pre>"},{"location":"networking/phpIPAM/api_interaction/#fetch-next-free-address-in-subnet","title":"Fetch next free address in subnet","text":"<pre><code>curl -k https://ipam.example.com/api/myphpipamappid/addresses/first_free/11 --header \"Content-Type: application/json\" \"token: .J1e9ipFZkPE6EvIRAqEf9hp\" -X GET\u00a0\n</code></pre>"},{"location":"networking/phpIPAM/api_interaction/#reserve-free-entry-and-add-description","title":"Reserve free entry and add description","text":"<pre><code>curl -k https://ipam.example.com/api/myphpipamappid/addresses/first_free/11 --header \"Content-Type: application/json\" \"token: .J1e9ipFZkPE6EvIRAqEf9hp\" --data '{\"description\":\"App Server\"}' -X PATCH\n</code></pre>"},{"location":"security/keepass/keepass_url_override/","title":"KeePass URL Override","text":"<p>KeePass is a very useful Password Safe that runs on your machine however some of the built in URL overrides don't work as well. </p> <p>Below are some useful custom URL overrides you can implement for improved functionality within the Windows version.</p> <p>This link will assist with the steps to implement the URL override. </p>"},{"location":"security/keepass/keepass_url_override/#remote-desktop-protocol","title":"Remote Desktop Protocol","text":"<pre><code>cmd://cmd /c cmdkey /generic: TERMSRV/{URL:RMVSCM} /user:{USERNAME} /pass:\"{PASSWORD}\" &amp;&amp; mstsc /v:{URL:RMVSCM} &amp;&amp; timeout /t 5 /nobreak &amp;&amp; cmdkey /delete:TERMSRV/{URL:RMVSCM}\n</code></pre>"},{"location":"security/keepass/keepass_url_override/#ssh-putty","title":"SSH (PuTTY)","text":"<pre><code>cmd://\"putty.exe\" -ssh \"{USERNAME}@{URL:HOST}\" -pw \"{PASSWORD}\" \n</code></pre>"}]}